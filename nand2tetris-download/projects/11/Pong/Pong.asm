// Setup memory segments
@256 // Stack
D=A
@SP
M=D
@300 // LCL
D=A
@LCL
M=D
@400 // ARG
D=A
@ARG
M=D
@3000 // THIS
D=A
@THIS
M=D
@3010 // THAT
D=A
@THAT
M=D
// call Sys.init 0
@.Sys.init$ret.32768
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(.Sys.init$ret.32768)
// label PROGRAMEND
(PROGRAMEND)
// goto PROGRAMEND
@PROGRAMEND
0;JMP

// Code starts
// function Array.new 0
(Array.new)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@Array.Memory.alloc$ret.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Array.Memory.alloc$ret.3)
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Array.dispose 0
(Array.dispose)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@Array.Memory.deAlloc$ret.9
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Array.Memory.deAlloc$ret.9)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.new 0
(Ball.new)
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@Ball.Memory.alloc$ret.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Ball.Memory.alloc$ret.3)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 10
@10
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 11
@11
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 4
@4
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 12
@12
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 5
@5
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 13
@13
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 14
@14
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.show 1
@Ball.Ball.show$ret.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball.Ball.show$ret.24)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.dispose 0
(Ball.dispose)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@Ball.Memory.deAlloc$ret.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Ball.Memory.deAlloc$ret.32)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.show 0
(Ball.show)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// call Screen.setColor 1
@Ball.Screen.setColor$ret.41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball.Screen.setColor$ret.41)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.draw 1
@Ball.Ball.draw$ret.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball.Ball.draw$ret.44)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.hide 0
(Ball.hide)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@Ball.Screen.setColor$ret.52
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball.Screen.setColor$ret.52)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.draw 1
@Ball.Ball.draw$ret.55
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball.Ball.draw$ret.55)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.draw 0
(Ball.draw)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Ball.Screen.drawRectangle$ret.70
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Ball.Screen.drawRectangle$ret.70)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.getLeft 0
(Ball.getLeft)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.getRight 0
(Ball.getRight)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.setDestination 3
(Ball.setDestination)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 2
@2
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 3
@3
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Ball.Math.abs$ret.98
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball.Math.abs$ret.98)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Ball.Math.abs$ret.101
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball.Math.abs$ret.101)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE105
D;JLT
D=0
@Ball.JUMPWRITE105
0;JMP
(Ball.JUMPTRUE105)
D=-1
(Ball.JUMPWRITE105)
@SP
A=M
M=D
@SP
M=M+1
// pop this 7
@7
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 7
@7
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$1
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$1
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE118
D;JLT
D=0
@Ball.JUMPWRITE118
0;JMP
(Ball.JUMPTRUE118)
D=-1
(Ball.JUMPWRITE118)
@SP
A=M
M=D
@SP
M=M+1
// pop this 8
@8
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE122
D;JLT
D=0
@Ball.JUMPWRITE122
0;JMP
(Ball.JUMPTRUE122)
D=-1
(Ball.JUMPWRITE122)
@SP
A=M
M=D
@SP
M=M+1
// pop this 9
@9
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$1
@Ball.ifEnd$1
0;JMP
// label Ball.ifFalse$1
(Ball.ifFalse$1)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE128
D;JLT
D=0
@Ball.JUMPWRITE128
0;JMP
(Ball.JUMPTRUE128)
D=-1
(Ball.JUMPWRITE128)
@SP
A=M
M=D
@SP
M=M+1
// pop this 8
@8
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE132
D;JLT
D=0
@Ball.JUMPWRITE132
0;JMP
(Ball.JUMPTRUE132)
D=-1
(Ball.JUMPWRITE132)
@SP
A=M
M=D
@SP
M=M+1
// pop this 9
@9
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$1
(Ball.ifEnd$1)
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.137
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.137)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.143
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.143)
// pop this 5
@5
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// call Math.multiply 2
@Ball.Math.multiply$ret.149
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.149)
// pop this 6
@6
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.move 0
(Ball.move)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.hide 1
@Ball.Ball.hide$ret.157
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.hide
0;JMP
(Ball.Ball.hide$ret.157)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE161
D;JLT
D=0
@Ball.JUMPWRITE161
0;JMP
(Ball.JUMPTRUE161)
D=-1
(Ball.JUMPWRITE161)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$2
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$2
D;JNE
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 5
@5
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$2
@Ball.ifEnd$2
0;JMP
// label Ball.ifFalse$2
(Ball.ifFalse$2)
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 6
@6
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 9
@9
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$3
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$3
D;JNE
// push this 7
@7
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$4
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$4
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$4
@Ball.ifEnd$4
0;JMP
// label Ball.ifFalse$4
(Ball.ifFalse$4)
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$4
(Ball.ifEnd$4)
// goto Ball.ifEnd$3
@Ball.ifEnd$3
0;JMP
// label Ball.ifFalse$3
(Ball.ifFalse$3)
// push this 7
@7
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$5
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$5
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$5
@Ball.ifEnd$5
0;JMP
// label Ball.ifFalse$5
(Ball.ifFalse$5)
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$5
(Ball.ifEnd$5)
// label Ball.ifEnd$3
(Ball.ifEnd$3)
// label Ball.ifEnd$2
(Ball.ifEnd$2)
// push this 8
@8
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$6
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$6
D;JNE
// push this 7
@7
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$7
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$7
D;JNE
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$7
@Ball.ifEnd$7
0;JMP
// label Ball.ifFalse$7
(Ball.ifFalse$7)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$7
(Ball.ifEnd$7)
// goto Ball.ifEnd$6
@Ball.ifEnd$6
0;JMP
// label Ball.ifFalse$6
(Ball.ifFalse$6)
// push this 7
@7
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$8
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$8
D;JNE
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$8
@Ball.ifEnd$8
0;JMP
// label Ball.ifFalse$8
(Ball.ifFalse$8)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$8
(Ball.ifEnd$8)
// label Ball.ifEnd$6
(Ball.ifEnd$6)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 10
@10
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE245
D;JGT
D=0
@Ball.JUMPWRITE245
0;JMP
(Ball.JUMPTRUE245)
D=-1
(Ball.JUMPWRITE245)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$9
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$9
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 14
@14
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 10
@10
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$9
@Ball.ifEnd$9
0;JMP
// label Ball.ifFalse$9
(Ball.ifFalse$9)
// label Ball.ifEnd$9
(Ball.ifEnd$9)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 11
@11
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE258
D;JLT
D=0
@Ball.JUMPWRITE258
0;JMP
(Ball.JUMPTRUE258)
D=-1
(Ball.JUMPWRITE258)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$10
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$10
D;JNE
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 14
@14
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 11
@11
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$10
@Ball.ifEnd$10
0;JMP
// label Ball.ifFalse$10
(Ball.ifFalse$10)
// label Ball.ifEnd$10
(Ball.ifEnd$10)
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 12
@12
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE271
D;JGT
D=0
@Ball.JUMPWRITE271
0;JMP
(Ball.JUMPTRUE271)
D=-1
(Ball.JUMPWRITE271)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$11
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$11
D;JNE
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 14
@14
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 12
@12
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$11
@Ball.ifEnd$11
0;JMP
// label Ball.ifFalse$11
(Ball.ifFalse$11)
// label Ball.ifEnd$11
(Ball.ifEnd$11)
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 13
@13
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE284
D;JLT
D=0
@Ball.JUMPWRITE284
0;JMP
(Ball.JUMPTRUE284)
D=-1
(Ball.JUMPWRITE284)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$12
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$12
D;JNE
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 14
@14
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 13
@13
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$12
@Ball.ifEnd$12
0;JMP
// label Ball.ifFalse$12
(Ball.ifFalse$12)
// label Ball.ifEnd$12
(Ball.ifEnd$12)
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.show 1
@Ball.Ball.show$ret.296
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball.Ball.show$ret.296)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 14
@14
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.bounce 5
(Ball.bounce)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.305
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.305)
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.309
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.309)
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE313
D;JEQ
D=0
@Ball.JUMPWRITE313
0;JMP
(Ball.JUMPTRUE313)
D=-1
(Ball.JUMPWRITE313)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$13
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$13
D;JNE
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$13
@Ball.ifEnd$13
0;JMP
// label Ball.ifFalse$13
(Ball.ifFalse$13)
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE322
D;JLT
D=0
@Ball.JUMPWRITE322
0;JMP
(Ball.JUMPTRUE322)
D=-1
(Ball.JUMPWRITE322)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE326
D;JEQ
D=0
@Ball.JUMPWRITE326
0;JMP
(Ball.JUMPTRUE326)
D=-1
(Ball.JUMPWRITE326)
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE330
D;JLT
D=0
@Ball.JUMPWRITE330
0;JMP
(Ball.JUMPTRUE330)
D=-1
(Ball.JUMPWRITE330)
@SP
A=M
M=D
@SP
M=M+1
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE334
D;JEQ
D=0
@Ball.JUMPWRITE334
0;JMP
(Ball.JUMPTRUE334)
D=-1
(Ball.JUMPWRITE334)
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$14
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$14
D;JNE
// push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$14
@Ball.ifEnd$14
0;JMP
// label Ball.ifFalse$14
(Ball.ifFalse$14)
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$14
(Ball.ifEnd$14)
// label Ball.ifEnd$13
(Ball.ifEnd$13)
// push this 14
@14
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE349
D;JEQ
D=0
@Ball.JUMPWRITE349
0;JMP
(Ball.JUMPTRUE349)
D=-1
(Ball.JUMPWRITE349)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$15
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$15
D;JNE
// push constant 506
@506
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// call Math.multiply 2
@Ball.Math.multiply$ret.357
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.357)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.359
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.359)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.364
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.364)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$15
@Ball.ifEnd$15
0;JMP
// label Ball.ifFalse$15
(Ball.ifFalse$15)
// push this 14
@14
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE371
D;JEQ
D=0
@Ball.JUMPWRITE371
0;JMP
(Ball.JUMPTRUE371)
D=-1
(Ball.JUMPWRITE371)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$16
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$16
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.378
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.378)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.380
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.380)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.385
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.385)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$16
@Ball.ifEnd$16
0;JMP
// label Ball.ifFalse$16
(Ball.ifFalse$16)
// push this 14
@14
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Ball.JUMPTRUE392
D;JEQ
D=0
@Ball.JUMPWRITE392
0;JMP
(Ball.JUMPTRUE392)
D=-1
(Ball.JUMPWRITE392)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Ball.ifFalse$17
@SP
M=M-1
A=M
D=M
@Ball.ifFalse$17
D;JNE
// push constant 250
@250
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// call Math.multiply 2
@Ball.Math.multiply$ret.400
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.400)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.402
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.402)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.407
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.407)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Ball.ifEnd$17
@Ball.ifEnd$17
0;JMP
// label Ball.ifFalse$17
(Ball.ifFalse$17)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.416
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.416)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Ball.Math.divide$ret.418
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball.Math.divide$ret.418)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Ball.Math.multiply$ret.423
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball.Math.multiply$ret.423)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Ball.ifEnd$17
(Ball.ifEnd$17)
// label Ball.ifEnd$16
(Ball.ifEnd$16)
// label Ball.ifEnd$15
(Ball.ifEnd$15)
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.setDestination 3
@Ball.Ball.setDestination$ret.432
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(Ball.Ball.setDestination$ret.432)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.new 0
(Bat.new)
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@Bat.Memory.alloc$ret.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Bat.Memory.alloc$ret.3)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 3
@3
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.show 1
@Bat.Bat.show$ret.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat.Bat.show$ret.16)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.dispose 0
(Bat.dispose)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@Bat.Memory.deAlloc$ret.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Bat.Memory.deAlloc$ret.24)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.show 0
(Bat.show)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// call Screen.setColor 1
@Bat.Screen.setColor$ret.33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.33)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.draw 1
@Bat.Bat.draw$ret.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat.Bat.draw$ret.36)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.hide 0
(Bat.hide)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@Bat.Screen.setColor$ret.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.44)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.draw 1
@Bat.Bat.draw$ret.47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat.Bat.draw$ret.47)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.draw 0
(Bat.draw)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Bat.Screen.drawRectangle$ret.62
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$ret.62)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.setDirection 0
(Bat.setDirection)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.getLeft 0
(Bat.getLeft)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.getRight 0
(Bat.getRight)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.setWidth 0
(Bat.setWidth)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.hide 1
@Bat.Bat.hide$ret.89
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.hide
0;JMP
(Bat.Bat.hide$ret.89)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.show 1
@Bat.Bat.show$ret.94
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat.Bat.show$ret.94)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.move 0
(Bat.move)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Bat.JUMPTRUE103
D;JEQ
D=0
@Bat.JUMPWRITE103
0;JMP
(Bat.JUMPTRUE103)
D=-1
(Bat.JUMPWRITE103)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Bat.ifFalse$1
@SP
M=M-1
A=M
D=M
@Bat.ifFalse$1
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Bat.JUMPTRUE112
D;JLT
D=0
@Bat.JUMPWRITE112
0;JMP
(Bat.JUMPTRUE112)
D=-1
(Bat.JUMPWRITE112)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Bat.ifFalse$2
@SP
M=M-1
A=M
D=M
@Bat.ifFalse$2
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Bat.ifEnd$2
@Bat.ifEnd$2
0;JMP
// label Bat.ifFalse$2
(Bat.ifFalse$2)
// label Bat.ifEnd$2
(Bat.ifEnd$2)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@Bat.Screen.setColor$ret.121
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.121)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Bat.Screen.drawRectangle$ret.137
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$ret.137)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// call Screen.setColor 1
@Bat.Screen.setColor$ret.141
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.141)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Bat.Screen.drawRectangle$ret.151
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$ret.151)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Bat.ifEnd$1
@Bat.ifEnd$1
0;JMP
// label Bat.ifFalse$1
(Bat.ifFalse$1)
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Bat.JUMPTRUE163
D;JGT
D=0
@Bat.JUMPWRITE163
0;JMP
(Bat.JUMPTRUE163)
D=-1
(Bat.JUMPWRITE163)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Bat.ifFalse$3
@SP
M=M-1
A=M
D=M
@Bat.ifFalse$3
D;JNE
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Bat.ifEnd$3
@Bat.ifEnd$3
0;JMP
// label Bat.ifFalse$3
(Bat.ifFalse$3)
// label Bat.ifEnd$3
(Bat.ifEnd$3)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@Bat.Screen.setColor$ret.174
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.174)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Bat.Screen.drawRectangle$ret.186
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$ret.186)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// call Screen.setColor 1
@Bat.Screen.setColor$ret.190
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat.Screen.setColor$ret.190)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawRectangle 4
@Bat.Screen.drawRectangle$ret.204
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat.Screen.drawRectangle$ret.204)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Bat.ifEnd$1
(Bat.ifEnd$1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Keyboard.init 0
(Keyboard.init)
// push constant 24576
@24576
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Keyboard.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 1386
@1386
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Keyboard.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Keyboard.keyPressed 0
(Keyboard.keyPressed)
// push static 0
@Keyboard.0
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.peek 1
@Keyboard.Memory.peek$ret.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Keyboard.Memory.peek$ret.10)
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Keyboard.readChar 1
(Keyboard.readChar)
@SP
M=M+1
A=M-1
M=0
// label Keyboard.while$1
(Keyboard.while$1)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE16
D;JEQ
D=0
@Keyboard.JUMPWRITE16
0;JMP
(Keyboard.JUMPTRUE16)
D=-1
(Keyboard.JUMPWRITE16)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$1
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$1
D;JNE
// call Keyboard.keyPressed 0
@Keyboard.Keyboard.keyPressed$ret.19
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.Keyboard.keyPressed$ret.19)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Keyboard.while$1
@Keyboard.while$1
0;JMP
// label Keyboard.whileEnd$1
(Keyboard.whileEnd$1)
// label Keyboard.while$2
(Keyboard.while$2)
// call Keyboard.keyPressed 0
@Keyboard.Keyboard.keyPressed$ret.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.Keyboard.keyPressed$ret.24)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE26
D;JEQ
D=0
@Keyboard.JUMPWRITE26
0;JMP
(Keyboard.JUMPTRUE26)
D=-1
(Keyboard.JUMPWRITE26)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$2
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$2
D;JNE
// goto Keyboard.while$2
@Keyboard.while$2
0;JMP
// label Keyboard.whileEnd$2
(Keyboard.whileEnd$2)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printChar 1
@Keyboard.Output.printChar$ret.33
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Keyboard.Output.printChar$ret.33)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Keyboard.readLine 5
(Keyboard.readLine)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push static 1
@Keyboard.1
D=M
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@Keyboard.String.new$ret.39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Keyboard.String.new$ret.39)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printString 1
@Keyboard.Output.printString$ret.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Keyboard.Output.printString$ret.42)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Keyboard.while$3
(Keyboard.while$3)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 128
@128
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE47
D;JEQ
D=0
@Keyboard.JUMPWRITE47
0;JMP
(Keyboard.JUMPTRUE47)
D=-1
(Keyboard.JUMPWRITE47)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$3
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$3
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Keyboard.while$4
(Keyboard.while$4)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE56
D;JEQ
D=0
@Keyboard.JUMPWRITE56
0;JMP
(Keyboard.JUMPTRUE56)
D=-1
(Keyboard.JUMPWRITE56)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$4
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$4
D;JNE
// call Keyboard.keyPressed 0
@Keyboard.Keyboard.keyPressed$ret.59
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.Keyboard.keyPressed$ret.59)
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Keyboard.while$4
@Keyboard.while$4
0;JMP
// label Keyboard.whileEnd$4
(Keyboard.whileEnd$4)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printChar 1
@Keyboard.Output.printChar$ret.64
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Keyboard.Output.printChar$ret.64)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 129
@129
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE68
D;JEQ
D=0
@Keyboard.JUMPWRITE68
0;JMP
(Keyboard.JUMPTRUE68)
D=-1
(Keyboard.JUMPWRITE68)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.ifFalse$5
@SP
M=M-1
A=M
D=M
@Keyboard.ifFalse$5
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.eraseLastChar 1
@Keyboard.String.eraseLastChar$ret.72
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.eraseLastChar
0;JMP
(Keyboard.String.eraseLastChar$ret.72)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Keyboard.ifEnd$5
@Keyboard.ifEnd$5
0;JMP
// label Keyboard.ifFalse$5
(Keyboard.ifFalse$5)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Keyboard.String.appendChar$ret.78
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Keyboard.String.appendChar$ret.78)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Keyboard.ifEnd$5
(Keyboard.ifEnd$5)
// label Keyboard.while$6
(Keyboard.while$6)
// call Keyboard.keyPressed 0
@Keyboard.Keyboard.keyPressed$ret.82
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.Keyboard.keyPressed$ret.82)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE84
D;JEQ
D=0
@Keyboard.JUMPWRITE84
0;JMP
(Keyboard.JUMPTRUE84)
D=-1
(Keyboard.JUMPWRITE84)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$6
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$6
D;JNE
// goto Keyboard.while$6
@Keyboard.while$6
0;JMP
// label Keyboard.whileEnd$6
(Keyboard.whileEnd$6)
// goto Keyboard.while$3
@Keyboard.while$3
0;JMP
// label Keyboard.whileEnd$3
(Keyboard.whileEnd$3)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.length 1
@Keyboard.String.length$ret.93
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(Keyboard.String.length$ret.93)
// call String.new 1
@Keyboard.String.new$ret.94
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Keyboard.String.new$ret.94)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.length 1
@Keyboard.String.length$ret.99
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(Keyboard.String.length$ret.99)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Keyboard.while$7
(Keyboard.while$7)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Keyboard.JUMPTRUE106
D;JLT
D=0
@Keyboard.JUMPWRITE106
0;JMP
(Keyboard.JUMPTRUE106)
D=-1
(Keyboard.JUMPWRITE106)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Keyboard.whileEnd$7
@SP
M=M-1
A=M
D=M
@Keyboard.whileEnd$7
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.charAt 2
@Keyboard.String.charAt$ret.112
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(Keyboard.String.charAt$ret.112)
// call String.appendChar 2
@Keyboard.String.appendChar$ret.113
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Keyboard.String.appendChar$ret.113)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Keyboard.while$7
@Keyboard.while$7
0;JMP
// label Keyboard.whileEnd$7
(Keyboard.whileEnd$7)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.dispose 1
@Keyboard.String.dispose$ret.122
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.dispose
0;JMP
(Keyboard.String.dispose$ret.122)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Keyboard.readInt 1
(Keyboard.readInt)
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Keyboard.readLine 1
@Keyboard.Keyboard.readLine$ret.128
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.readLine
0;JMP
(Keyboard.Keyboard.readLine$ret.128)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.intValue 1
@Keyboard.String.intValue$ret.131
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.intValue
0;JMP
(Keyboard.String.intValue$ret.131)
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Main.main 1
(Main.main)
@SP
M=M+1
A=M-1
M=0
// call PongGame.newInstance 0
@Main.PongGame.newInstance$ret.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.newInstance
0;JMP
(Main.PongGame.newInstance$ret.2)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call PongGame.getInstance 0
@Main.PongGame.getInstance$ret.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.getInstance
0;JMP
(Main.PongGame.getInstance$ret.4)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call PongGame.run 1
@Main.PongGame.run$ret.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.run
0;JMP
(Main.PongGame.run$ret.7)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call PongGame.dispose 1
@Main.PongGame.dispose$ret.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.dispose
0;JMP
(Main.PongGame.dispose$ret.10)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.init 1
(Math.init)
@SP
M=M+1
A=M-1
M=0
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Math.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Math.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@Math.Array.new$ret.7
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Math.Array.new$ret.7)
// pop static 2
@Math.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Math.while$1
(Math.while$1)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE22
D;JLT
D=0
@Math.JUMPWRITE22
0;JMP
(Math.JUMPTRUE22)
D=-1
(Math.JUMPWRITE22)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.whileEnd$1
@SP
M=M-1
A=M
D=M
@Math.whileEnd$1
D;JNE
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.while$1
@Math.while$1
0;JMP
// label Math.whileEnd$1
(Math.whileEnd$1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.bit 0
(Math.bit)
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE64
D;JEQ
D=0
@Math.JUMPWRITE64
0;JMP
(Math.JUMPTRUE64)
D=-1
(Math.JUMPWRITE64)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.powerOfTwo 0
(Math.powerOfTwo)
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.multiply 3
(Math.multiply)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Math.while$2
(Math.while$2)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 0
@Math.0
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE84
D;JLT
D=0
@Math.JUMPWRITE84
0;JMP
(Math.JUMPTRUE84)
D=-1
(Math.JUMPWRITE84)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.whileEnd$2
@SP
M=M-1
A=M
D=M
@Math.whileEnd$2
D;JNE
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.bit 2
@Math.Math.bit$ret.89
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.bit
0;JMP
(Math.Math.bit$ret.89)
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$3
@SP
M=M-1
A=M
D=M
@Math.ifFalse$3
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.ifEnd$3
@Math.ifEnd$3
0;JMP
// label Math.ifFalse$3
(Math.ifFalse$3)
// label Math.ifEnd$3
(Math.ifEnd$3)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.while$2
@Math.while$2
0;JMP
// label Math.whileEnd$2
(Math.whileEnd$2)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.divide 1
(Math.divide)
@SP
M=M+1
A=M-1
M=0
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE116
D;JLT
D=0
@Math.JUMPWRITE116
0;JMP
(Math.JUMPTRUE116)
D=-1
(Math.JUMPWRITE116)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$4
@SP
M=M-1
A=M
D=M
@Math.ifFalse$4
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.ifEnd$4
@Math.ifEnd$4
0;JMP
// label Math.ifFalse$4
(Math.ifFalse$4)
// label Math.ifEnd$4
(Math.ifEnd$4)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE127
D;JLT
D=0
@Math.JUMPWRITE127
0;JMP
(Math.JUMPTRUE127)
D=-1
(Math.JUMPWRITE127)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$5
@SP
M=M-1
A=M
D=M
@Math.ifFalse$5
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// call Math.multiply 2
@Math.Math.multiply$ret.133
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.133)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.ifEnd$5
@Math.ifEnd$5
0;JMP
// label Math.ifFalse$5
(Math.ifFalse$5)
// label Math.ifEnd$5
(Math.ifEnd$5)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Math.Math.abs$ret.140
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$ret.140)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Math.Math.abs$ret.142
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Math.Math.abs$ret.142)
// call Math.divideAbs 2
@Math.Math.divideAbs$ret.143
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divideAbs
0;JMP
(Math.Math.divideAbs$ret.143)
// call Math.multiply 2
@Math.Math.multiply$ret.144
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.144)
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.divideAbs 1
(Math.divideAbs)
@SP
M=M+1
A=M-1
M=0
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE149
D;JGT
D=0
@Math.JUMPWRITE149
0;JMP
(Math.JUMPTRUE149)
D=-1
(Math.JUMPWRITE149)
@SP
A=M
M=D
@SP
M=M+1
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE152
D;JLT
D=0
@Math.JUMPWRITE152
0;JMP
(Math.JUMPTRUE152)
D=-1
(Math.JUMPWRITE152)
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$6
@SP
M=M-1
A=M
D=M
@Math.ifFalse$6
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Math.ifEnd$6
@Math.ifEnd$6
0;JMP
// label Math.ifFalse$6
(Math.ifFalse$6)
// label Math.ifEnd$6
(Math.ifEnd$6)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Math.divideAbs 2
@Math.Math.divideAbs$ret.165
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divideAbs
0;JMP
(Math.Math.divideAbs$ret.165)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Math.Math.multiply$ret.170
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.170)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Math.Math.multiply$ret.172
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.172)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE175
D;JLT
D=0
@Math.JUMPWRITE175
0;JMP
(Math.JUMPTRUE175)
D=-1
(Math.JUMPWRITE175)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$7
@SP
M=M-1
A=M
D=M
@Math.ifFalse$7
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Math.ifEnd$7
@Math.ifEnd$7
0;JMP
// label Math.ifFalse$7
(Math.ifFalse$7)
// label Math.ifEnd$7
(Math.ifEnd$7)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.sqrt 5
(Math.sqrt)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Math.1
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Math.while$8
(Math.while$8)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE200
D;JGT
D=0
@Math.JUMPWRITE200
0;JMP
(Math.JUMPTRUE200)
D=-1
(Math.JUMPWRITE200)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.whileEnd$8
@SP
M=M-1
A=M
D=M
@Math.whileEnd$8
D;JNE
// push static 2
@Math.2
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Math.Math.multiply$ret.215
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.215)
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE221
D;JLT
D=0
@Math.JUMPWRITE221
0;JMP
(Math.JUMPTRUE221)
D=-1
(Math.JUMPWRITE221)
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE224
D;JGT
D=0
@Math.JUMPWRITE224
0;JMP
(Math.JUMPTRUE224)
D=-1
(Math.JUMPWRITE224)
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$9
@SP
M=M-1
A=M
D=M
@Math.ifFalse$9
D;JNE
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.ifEnd$9
@Math.ifEnd$9
0;JMP
// label Math.ifFalse$9
(Math.ifFalse$9)
// label Math.ifEnd$9
(Math.ifEnd$9)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Math.while$8
@Math.while$8
0;JMP
// label Math.whileEnd$8
(Math.whileEnd$8)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.max 0
(Math.max)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE244
D;JGT
D=0
@Math.JUMPWRITE244
0;JMP
(Math.JUMPTRUE244)
D=-1
(Math.JUMPWRITE244)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$10
@SP
M=M-1
A=M
D=M
@Math.ifFalse$10
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Math.ifEnd$10
@Math.ifEnd$10
0;JMP
// label Math.ifFalse$10
(Math.ifFalse$10)
// label Math.ifEnd$10
(Math.ifEnd$10)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.min 0
(Math.min)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE257
D;JLT
D=0
@Math.JUMPWRITE257
0;JMP
(Math.JUMPTRUE257)
D=-1
(Math.JUMPWRITE257)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$11
@SP
M=M-1
A=M
D=M
@Math.ifFalse$11
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Math.ifEnd$11
@Math.ifEnd$11
0;JMP
// label Math.ifFalse$11
(Math.ifFalse$11)
// label Math.ifEnd$11
(Math.ifEnd$11)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.abs 0
(Math.abs)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Math.JUMPTRUE270
D;JLT
D=0
@Math.JUMPWRITE270
0;JMP
(Math.JUMPTRUE270)
D=-1
(Math.JUMPWRITE270)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Math.ifFalse$12
@SP
M=M-1
A=M
D=M
@Math.ifFalse$12
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Math.ifEnd$12
@Math.ifEnd$12
0;JMP
// label Math.ifFalse$12
(Math.ifFalse$12)
// label Math.ifEnd$12
(Math.ifEnd$12)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Math.mod 0
(Math.mod)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Math.Math.divide$ret.286
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Math.Math.divide$ret.286)
// call Math.multiply 2
@Math.Math.multiply$ret.287
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Math.Math.multiply$ret.287)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Memory.init 0
(Memory.init)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Memory.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 2048
@2048
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Memory.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Memory.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Memory.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 14334
@14334
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Memory.peek 0
(Memory.peek)
// push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Memory.poke 0
(Memory.poke)
// push static 0
@Memory.0
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Memory.alloc 1
(Memory.alloc)
@SP
M=M+1
A=M-1
M=0
// push static 1
@Memory.1
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Memory.while$1
(Memory.while$1)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Memory.JUMPTRUE54
D;JLT
D=0
@Memory.JUMPWRITE54
0;JMP
(Memory.JUMPTRUE54)
D=-1
(Memory.JUMPWRITE54)
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Memory.JUMPTRUE57
D;JEQ
D=0
@Memory.JUMPWRITE57
0;JMP
(Memory.JUMPTRUE57)
D=-1
(Memory.JUMPWRITE57)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto Memory.whileEnd$1
@SP
M=M-1
A=M
D=M
@Memory.whileEnd$1
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Memory.while$1
@Memory.while$1
0;JMP
// label Memory.whileEnd$1
(Memory.whileEnd$1)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Memory.JUMPTRUE72
D;JEQ
D=0
@Memory.JUMPWRITE72
0;JMP
(Memory.JUMPTRUE72)
D=-1
(Memory.JUMPWRITE72)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Memory.ifFalse$2
@SP
M=M-1
A=M
D=M
@Memory.ifFalse$2
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Memory.ifEnd$2
@Memory.ifEnd$2
0;JMP
// label Memory.ifFalse$2
(Memory.ifFalse$2)
// label Memory.ifEnd$2
(Memory.ifEnd$2)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Memory.deAlloc 1
(Memory.deAlloc)
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push static 1
@Memory.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Memory.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.init 0
(Output.init)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 3
@Output.3
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 4
@Output.4
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Output.initMap 0
@Output.Output.initMap$ret.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.initMap
0;JMP
(Output.Output.initMap$ret.10)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.initMap 1
(Output.initMap)
@SP
M=M+1
A=M-1
M=0
// push constant 127
@127
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@Output.Array.new$ret.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$ret.16)
// pop static 0
@Output.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.30)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.44)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.58
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.58)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 20
@20
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.72
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.72)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.86
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.86)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 36
@36
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.100
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.100)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 37
@37
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.114
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.114)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.128
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.128)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 39
@39
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.142
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.142)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 40
@40
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.156
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.156)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 41
@41
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.170
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.170)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 42
@42
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.184
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.184)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.198
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.198)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.212
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.212)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.226
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.226)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 46
@46
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.240
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.240)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 47
@47
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.254
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.254)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.268
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.268)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.282
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.282)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.296
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.296)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.310
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.310)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 52
@52
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 26
@26
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.324
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.324)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 53
@53
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.338
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.338)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.352
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.352)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.366
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.366)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.380
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.380)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 57
@57
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.394
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.394)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 58
@58
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.408
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.408)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.422
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.422)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.436
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.436)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 61
@61
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.450
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.450)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.464
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.464)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 64
@64
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.478
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.478)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.492
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.492)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 65
@65
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.506
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.506)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 66
@66
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.520
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.520)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 67
@67
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.534
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.534)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 68
@68
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.548
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.548)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.562
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.562)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 70
@70
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.576
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.576)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 71
@71
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 44
@44
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.590
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.590)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 72
@72
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.604
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.604)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 73
@73
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.618
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.618)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 74
@74
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.632
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.632)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 75
@75
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.646
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.646)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 76
@76
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.660
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.660)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 77
@77
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 33
@33
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.674
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.674)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 78
@78
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.688
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.688)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 79
@79
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.702
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.702)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.716
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.716)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 81
@81
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 59
@59
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.730
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.730)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.744
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.744)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 83
@83
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.758
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.758)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 84
@84
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.772
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.772)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 85
@85
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.786
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.786)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 86
@86
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.800
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.800)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 87
@87
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.814
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.814)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 88
@88
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.828
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.828)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 89
@89
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.842
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.842)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 90
@90
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 49
@49
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 35
@35
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.856
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.856)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 91
@91
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.870
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.870)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 92
@92
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.884
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.884)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 93
@93
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.898
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.898)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 94
@94
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.912
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.912)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 95
@95
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.926
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.926)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 96
@96
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.940
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.940)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.954
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.954)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 98
@98
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.968
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.968)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 99
@99
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.982
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.982)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 60
@60
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.996
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.996)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1010
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1010)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 102
@102
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1024
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1024)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 103
@103
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1038
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1038)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 104
@104
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1052
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1052)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 105
@105
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1066
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1066)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 106
@106
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1080
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1080)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 107
@107
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1094
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1094)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 108
@108
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 14
@14
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1108
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1108)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 43
@43
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1122
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1122)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 110
@110
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1136
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1136)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1150
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1150)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 112
@112
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1164
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1164)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 113
@113
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1178
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1178)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 29
@29
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 55
@55
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1192
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1192)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 115
@115
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1206
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1206)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 116
@116
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 28
@28
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1220
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1220)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 117
@117
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 54
@54
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1234
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1234)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 118
@118
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1248
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1248)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 119
@119
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 18
@18
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1262
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1262)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 120
@120
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 30
@30
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1276
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1276)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 121
@121
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 62
@62
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 24
@24
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1290
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1290)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 122
@122
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 51
@51
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 63
@63
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1304
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1304)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 123
@123
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1318
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1318)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 124
@124
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1332
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1332)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 125
@125
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 56
@56
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 12
@12
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1346
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1346)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 38
@38
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 25
@25
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.create 12
@Output.Output.create$ret.1360
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@12
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.create
0;JMP
(Output.Output.create$ret.1360)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.create 1
(Output.create)
@SP
M=M+1
A=M-1
M=0
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@Output.Array.new$ret.1366
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(Output.Array.new$ret.1366)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 4
@4
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 5
@5
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 5
@5
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 6
@6
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 7
@7
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 8
@8
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 9
@9
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 10
@10
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 11
@11
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.getMap 0
(Output.getMap)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1469
D;JLT
D=0
@Output.JUMPWRITE1469
0;JMP
(Output.JUMPTRUE1469)
D=-1
(Output.JUMPWRITE1469)
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 126
@126
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1472
D;JGT
D=0
@Output.JUMPWRITE1472
0;JMP
(Output.JUMPTRUE1472)
D=-1
(Output.JUMPWRITE1472)
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$1
@SP
M=M-1
A=M
D=M
@Output.ifFalse$1
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop argument 0
@0
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$1
@Output.ifEnd$1
0;JMP
// label Output.ifFalse$1
(Output.ifFalse$1)
// label Output.ifEnd$1
(Output.ifEnd$1)
// push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.moveCursor 0
(Output.moveCursor)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.printChar 7
(Output.printChar)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 128
@128
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1497
D;JEQ
D=0
@Output.JUMPWRITE1497
0;JMP
(Output.JUMPTRUE1497)
D=-1
(Output.JUMPWRITE1497)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$2
@SP
M=M-1
A=M
D=M
@Output.ifFalse$2
D;JNE
// call Output.println 0
@Output.Output.println$ret.1500
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.Output.println$ret.1500)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Output.ifEnd$2
@Output.ifEnd$2
0;JMP
// label Output.ifFalse$2
(Output.ifFalse$2)
// label Output.ifEnd$2
(Output.ifEnd$2)
// push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Output.Math.multiply$ret.1509
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$ret.1509)
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Output.Math.multiply$ret.1511
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$ret.1511)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Output.Math.divide$ret.1515
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Output.Math.divide$ret.1515)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.mod 2
@Output.Math.mod$ret.1519
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.mod
0;JMP
(Output.Math.mod$ret.1519)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1521
D;JEQ
D=0
@Output.JUMPWRITE1521
0;JMP
(Output.JUMPTRUE1521)
D=-1
(Output.JUMPWRITE1521)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$3
@SP
M=M-1
A=M
D=M
@Output.ifFalse$3
D;JNE
// push constant 255
@255
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 5
@5
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$3
@Output.ifEnd$3
0;JMP
// label Output.ifFalse$3
(Output.ifFalse$3)
// push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 256
@256
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 5
@5
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Output.ifEnd$3
(Output.ifEnd$3)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 0
@Output.0
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 6
@6
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Output.while$4
(Output.while$4)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 11
@11
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1547
D;JLT
D=0
@Output.JUMPWRITE1547
0;JMP
(Output.JUMPTRUE1547)
D=-1
(Output.JUMPWRITE1547)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.whileEnd$4
@SP
M=M-1
A=M
D=M
@Output.whileEnd$4
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Output.Math.multiply$ret.1553
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$ret.1553)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Output.Math.multiply$ret.1565
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Output.Math.multiply$ret.1565)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.updateScreen 3
@Output.Screen.updateScreen$ret.1567
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.updateScreen
0;JMP
(Output.Screen.updateScreen$ret.1567)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.while$4
@Output.while$4
0;JMP
// label Output.whileEnd$4
(Output.whileEnd$4)
// push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1581
D;JGT
D=0
@Output.JUMPWRITE1581
0;JMP
(Output.JUMPTRUE1581)
D=-1
(Output.JUMPWRITE1581)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$5
@SP
M=M-1
A=M
D=M
@Output.ifFalse$5
D;JNE
// call Output.println 0
@Output.Output.println$ret.1584
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Output.Output.println$ret.1584)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$5
@Output.ifEnd$5
0;JMP
// label Output.ifFalse$5
(Output.ifFalse$5)
// label Output.ifEnd$5
(Output.ifEnd$5)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.printString 1
(Output.printString)
@SP
M=M+1
A=M-1
M=0
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Output.while$6
(Output.while$6)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.length 1
@Output.String.length$ret.1597
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.length
0;JMP
(Output.String.length$ret.1597)
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1598
D;JLT
D=0
@Output.JUMPWRITE1598
0;JMP
(Output.JUMPTRUE1598)
D=-1
(Output.JUMPWRITE1598)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.whileEnd$6
@SP
M=M-1
A=M
D=M
@Output.whileEnd$6
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.charAt 2
@Output.String.charAt$ret.1603
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(Output.String.charAt$ret.1603)
// call Output.printChar 1
@Output.Output.printChar$ret.1604
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.Output.printChar$ret.1604)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.while$6
@Output.while$6
0;JMP
// label Output.whileEnd$6
(Output.whileEnd$6)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.printInt 3
(Output.printInt)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Output.Math.abs$ret.1618
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Output.Math.abs$ret.1618)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Output.while$7
(Output.while$7)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1623
D;JGT
D=0
@Output.JUMPWRITE1623
0;JMP
(Output.JUMPTRUE1623)
D=-1
(Output.JUMPWRITE1623)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.whileEnd$7
@SP
M=M-1
A=M
D=M
@Output.whileEnd$7
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Output.Math.divide$ret.1632
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Output.Math.divide$ret.1632)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.while$7
@Output.while$7
0;JMP
// label Output.whileEnd$7
(Output.whileEnd$7)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1638
D;JLT
D=0
@Output.JUMPWRITE1638
0;JMP
(Output.JUMPTRUE1638)
D=-1
(Output.JUMPWRITE1638)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$8
@SP
M=M-1
A=M
D=M
@Output.ifFalse$8
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1643
D;JEQ
D=0
@Output.JUMPWRITE1643
0;JMP
(Output.JUMPTRUE1643)
D=-1
(Output.JUMPWRITE1643)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$9
@SP
M=M-1
A=M
D=M
@Output.ifFalse$9
D;JNE
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$9
@Output.ifEnd$9
0;JMP
// label Output.ifFalse$9
(Output.ifFalse$9)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Output.ifEnd$9
(Output.ifEnd$9)
// goto Output.ifEnd$8
@Output.ifEnd$8
0;JMP
// label Output.ifFalse$8
(Output.ifFalse$8)
// label Output.ifEnd$8
(Output.ifEnd$8)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@Output.String.new$ret.1659
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Output.String.new$ret.1659)
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.setInt 2
@Output.String.setInt$ret.1663
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setInt
0;JMP
(Output.String.setInt$ret.1663)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printString 1
@Output.Output.printString$ret.1666
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Output.Output.printString$ret.1666)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.println 0
(Output.println)
// push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
// push static 3
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1677
D;JGT
D=0
@Output.JUMPWRITE1677
0;JMP
(Output.JUMPTRUE1677)
D=-1
(Output.JUMPWRITE1677)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$10
@SP
M=M-1
A=M
D=M
@Output.ifFalse$10
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$10
@Output.ifEnd$10
0;JMP
// label Output.ifFalse$10
(Output.ifFalse$10)
// label Output.ifEnd$10
(Output.ifEnd$10)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Output.backSpace 2
(Output.backSpace)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 2
@Output.2
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1698
D;JLT
D=0
@Output.JUMPWRITE1698
0;JMP
(Output.JUMPTRUE1698)
D=-1
(Output.JUMPWRITE1698)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$11
@SP
M=M-1
A=M
D=M
@Output.ifFalse$11
D;JNE
// push static 4
@Output.4
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Output.1
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$11
@Output.ifEnd$11
0;JMP
// label Output.ifFalse$11
(Output.ifFalse$11)
// label Output.ifEnd$11
(Output.ifEnd$11)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Output.JUMPTRUE1712
D;JLT
D=0
@Output.JUMPWRITE1712
0;JMP
(Output.JUMPTRUE1712)
D=-1
(Output.JUMPWRITE1712)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Output.ifFalse$12
@SP
M=M-1
A=M
D=M
@Output.ifFalse$12
D;JNE
// push static 3
@Output.3
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Output.ifEnd$12
@Output.ifEnd$12
0;JMP
// label Output.ifFalse$12
(Output.ifFalse$12)
// label Output.ifEnd$12
(Output.ifEnd$12)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.setColor 1
@Output.Screen.setColor$ret.1725
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Output.Screen.setColor$ret.1725)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.printChar 1
@Output.Output.printChar$ret.1728
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printChar
0;JMP
(Output.Output.printChar$ret.1728)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// call Screen.setColor 1
@Output.Screen.setColor$ret.1732
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Output.Screen.setColor$ret.1732)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 2
@Output.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Output.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.new 0
(PongGame.new)
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@PongGame.Memory.alloc$ret.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(PongGame.Memory.alloc$ret.3)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// call Screen.clearScreen 0
@PongGame.Screen.clearScreen$ret.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.clearScreen
0;JMP
(PongGame.Screen.clearScreen$ret.5)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 6
@6
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 230
@230
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 229
@229
D=A
@SP
M=M+1
A=M-1
M=D
// push this 6
@6
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// call Bat.new 4
@PongGame.Bat.new$ret.13
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.new
0;JMP
(PongGame.Bat.new$ret.13)
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 253
@253
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 222
@222
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 229
@229
D=A
@SP
M=M+1
A=M-1
M=D
// call Ball.new 6
@PongGame.Ball.new$ret.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@6
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.new
0;JMP
(PongGame.Ball.new$ret.21)
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 400
@400
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Ball.setDestination 3
@PongGame.Ball.setDestination$ret.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(PongGame.Ball.setDestination$ret.26)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 238
@238
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 511
@511
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 240
@240
D=A
@SP
M=M+1
A=M-1
M=D
// call Screen.drawRectangle 4
@PongGame.Screen.drawRectangle$ret.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(PongGame.Screen.drawRectangle$ret.32)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.moveCursor 2
@PongGame.Output.moveCursor$ret.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$ret.36)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@PongGame.String.new$ret.39
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame.String.new$ret.39)
// push constant 83
@83
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.41
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.41)
// push constant 99
@99
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.43
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.43)
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.45
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.45)
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.47
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.47)
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.49)
// push constant 58
@58
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.51
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.51)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.53
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.53)
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.55
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.55)
// call Output.printString 1
@PongGame.Output.printString$ret.56
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame.Output.printString$ret.56)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 3
@3
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 2
@2
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 5
@5
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.dispose 0
(PongGame.dispose)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.dispose 1
@PongGame.Bat.dispose$ret.72
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.dispose
0;JMP
(PongGame.Bat.dispose$ret.72)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.dispose 1
@PongGame.Ball.dispose$ret.75
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.dispose
0;JMP
(PongGame.Ball.dispose$ret.75)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.deAlloc 1
@PongGame.Memory.deAlloc$ret.78
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(PongGame.Memory.deAlloc$ret.78)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.newInstance 0
(PongGame.newInstance)
// call PongGame.new 0
@PongGame.PongGame.new$ret.83
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.new
0;JMP
(PongGame.PongGame.new$ret.83)
// pop static 0
@PongGame.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.getInstance 0
(PongGame.getInstance)
// push static 0
@PongGame.0
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.run 1
(PongGame.run)
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// label PongGame.while$1
(PongGame.while$1)
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto PongGame.whileEnd$1
@SP
M=M-1
A=M
D=M
@PongGame.whileEnd$1
D;JNE
// label PongGame.while$2
(PongGame.while$2)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE101
D;JEQ
D=0
@PongGame.JUMPWRITE101
0;JMP
(PongGame.JUMPTRUE101)
D=-1
(PongGame.JUMPWRITE101)
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto PongGame.whileEnd$2
@SP
M=M-1
A=M
D=M
@PongGame.whileEnd$2
D;JNE
// call Keyboard.keyPressed 0
@PongGame.Keyboard.keyPressed$ret.107
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame.Keyboard.keyPressed$ret.107)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.move 1
@PongGame.Bat.move$ret.110
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame.Bat.move$ret.110)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call PongGame.moveBall 1
@PongGame.PongGame.moveBall$ret.113
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame.PongGame.moveBall$ret.113)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.wait 1
@PongGame.Sys.wait$ret.116
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(PongGame.Sys.wait$ret.116)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.while$2
@PongGame.while$2
0;JMP
// label PongGame.whileEnd$2
(PongGame.whileEnd$2)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 130
@130
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE122
D;JEQ
D=0
@PongGame.JUMPWRITE122
0;JMP
(PongGame.JUMPTRUE122)
D=-1
(PongGame.JUMPWRITE122)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$3
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$3
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// call Bat.setDirection 2
@PongGame.Bat.setDirection$ret.127
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame.Bat.setDirection$ret.127)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$3
@PongGame.ifEnd$3
0;JMP
// label PongGame.ifFalse$3
(PongGame.ifFalse$3)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 132
@132
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE133
D;JEQ
D=0
@PongGame.JUMPWRITE133
0;JMP
(PongGame.JUMPTRUE133)
D=-1
(PongGame.JUMPWRITE133)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$4
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$4
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Bat.setDirection 2
@PongGame.Bat.setDirection$ret.138
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame.Bat.setDirection$ret.138)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$4
@PongGame.ifEnd$4
0;JMP
// label PongGame.ifFalse$4
(PongGame.ifFalse$4)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 140
@140
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE144
D;JEQ
D=0
@PongGame.JUMPWRITE144
0;JMP
(PongGame.JUMPTRUE144)
D=-1
(PongGame.JUMPWRITE144)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$5
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$5
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// pop this 3
@3
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$5
@PongGame.ifEnd$5
0;JMP
// label PongGame.ifFalse$5
(PongGame.ifFalse$5)
// label PongGame.ifEnd$5
(PongGame.ifEnd$5)
// label PongGame.ifEnd$4
(PongGame.ifEnd$4)
// label PongGame.ifEnd$3
(PongGame.ifEnd$3)
// label PongGame.while$6
(PongGame.while$6)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE158
D;JEQ
D=0
@PongGame.JUMPWRITE158
0;JMP
(PongGame.JUMPTRUE158)
D=-1
(PongGame.JUMPWRITE158)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto PongGame.whileEnd$6
@SP
M=M-1
A=M
D=M
@PongGame.whileEnd$6
D;JNE
// call Keyboard.keyPressed 0
@PongGame.Keyboard.keyPressed$ret.165
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame.Keyboard.keyPressed$ret.165)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.move 1
@PongGame.Bat.move$ret.168
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame.Bat.move$ret.168)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// call PongGame.moveBall 1
@PongGame.PongGame.moveBall$ret.171
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame.PongGame.moveBall$ret.171)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@SP
M=M+1
A=M-1
M=D
// call Sys.wait 1
@PongGame.Sys.wait$ret.174
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(PongGame.Sys.wait$ret.174)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.while$6
@PongGame.while$6
0;JMP
// label PongGame.whileEnd$6
(PongGame.whileEnd$6)
// goto PongGame.while$1
@PongGame.while$1
0;JMP
// label PongGame.whileEnd$1
(PongGame.whileEnd$1)
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$7
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$7
D;JNE
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 27
@27
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.moveCursor 2
@PongGame.Output.moveCursor$ret.185
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$ret.185)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 9
@9
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@PongGame.String.new$ret.188
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame.String.new$ret.188)
// push constant 71
@71
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.190
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.190)
// push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.192
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.192)
// push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.194
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.194)
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.196
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.196)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.198
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.198)
// push constant 79
@79
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.200
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.200)
// push constant 118
@118
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.202
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.202)
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.204
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.204)
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@PongGame.String.appendChar$ret.206
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame.String.appendChar$ret.206)
// call Output.printString 1
@PongGame.Output.printString$ret.207
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame.Output.printString$ret.207)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$7
@PongGame.ifEnd$7
0;JMP
// label PongGame.ifFalse$7
(PongGame.ifFalse$7)
// label PongGame.ifEnd$7
(PongGame.ifEnd$7)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.moveBall 5
(PongGame.moveBall)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.move 1
@PongGame.Ball.move$ret.218
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.move
0;JMP
(PongGame.Ball.move$ret.218)
// pop this 2
@2
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE222
D;JGT
D=0
@PongGame.JUMPWRITE222
0;JMP
(PongGame.JUMPTRUE222)
D=-1
(PongGame.JUMPWRITE222)
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 5
@5
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE225
D;JEQ
D=0
@PongGame.JUMPWRITE225
0;JMP
(PongGame.JUMPTRUE225)
D=-1
(PongGame.JUMPWRITE225)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$8
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$8
D;JNE
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop this 5
@5
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.getLeft 1
@PongGame.Bat.getLeft$ret.235
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getLeft
0;JMP
(PongGame.Bat.getLeft$ret.235)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.getRight 1
@PongGame.Bat.getRight$ret.238
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getRight
0;JMP
(PongGame.Bat.getRight$ret.238)
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.getLeft 1
@PongGame.Ball.getLeft$ret.241
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getLeft
0;JMP
(PongGame.Ball.getLeft$ret.241)
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.getRight 1
@PongGame.Ball.getRight$ret.244
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getRight
0;JMP
(PongGame.Ball.getRight$ret.244)
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 2
@2
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE248
D;JEQ
D=0
@PongGame.JUMPWRITE248
0;JMP
(PongGame.JUMPTRUE248)
D=-1
(PongGame.JUMPWRITE248)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$9
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$9
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE253
D;JGT
D=0
@PongGame.JUMPWRITE253
0;JMP
(PongGame.JUMPTRUE253)
D=-1
(PongGame.JUMPWRITE253)
@SP
A=M
M=D
@SP
M=M+1
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE256
D;JLT
D=0
@PongGame.JUMPWRITE256
0;JMP
(PongGame.JUMPTRUE256)
D=-1
(PongGame.JUMPWRITE256)
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// pop this 3
@3
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 3
@3
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$10
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$10
D;JNE
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE267
D;JLT
D=0
@PongGame.JUMPWRITE267
0;JMP
(PongGame.JUMPTRUE267)
D=-1
(PongGame.JUMPWRITE267)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$11
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$11
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$11
@PongGame.ifEnd$11
0;JMP
// label PongGame.ifFalse$11
(PongGame.ifFalse$11)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@PongGame.JUMPTRUE279
D;JGT
D=0
@PongGame.JUMPWRITE279
0;JMP
(PongGame.JUMPTRUE279)
D=-1
(PongGame.JUMPWRITE279)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto PongGame.ifFalse$12
@SP
M=M-1
A=M
D=M
@PongGame.ifFalse$12
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$12
@PongGame.ifEnd$12
0;JMP
// label PongGame.ifFalse$12
(PongGame.ifFalse$12)
// label PongGame.ifEnd$12
(PongGame.ifEnd$12)
// label PongGame.ifEnd$11
(PongGame.ifEnd$11)
// push this 6
@6
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 6
@6
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 6
@6
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Bat.setWidth 2
@PongGame.Bat.setWidth$ret.294
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setWidth
0;JMP
(PongGame.Bat.setWidth$ret.294)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 4
@4
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 22
@22
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 7
@7
D=A
@SP
M=M+1
A=M-1
M=D
// call Output.moveCursor 2
@PongGame.Output.moveCursor$ret.302
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame.Output.moveCursor$ret.302)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 4
@4
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printInt 1
@PongGame.Output.printInt$ret.305
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(PongGame.Output.printInt$ret.305)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$10
@PongGame.ifEnd$10
0;JMP
// label PongGame.ifFalse$10
(PongGame.ifFalse$10)
// label PongGame.ifEnd$10
(PongGame.ifEnd$10)
// goto PongGame.ifEnd$9
@PongGame.ifEnd$9
0;JMP
// label PongGame.ifFalse$9
(PongGame.ifFalse$9)
// label PongGame.ifEnd$9
(PongGame.ifEnd$9)
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Ball.bounce 2
@PongGame.Ball.bounce$ret.315
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.bounce
0;JMP
(PongGame.Ball.bounce$ret.315)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto PongGame.ifEnd$8
@PongGame.ifEnd$8
0;JMP
// label PongGame.ifFalse$8
(PongGame.ifFalse$8)
// label PongGame.ifEnd$8
(PongGame.ifEnd$8)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.init 0
(Screen.init)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// pop static 0
@Screen.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 16384
@16384
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Screen.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.clearScreen 0
(Screen.clearScreen)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.setColor 0
(Screen.setColor)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Screen.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawPixel 4
(Screen.drawPixel)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.20
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.20)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Screen.Math.divide$ret.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$ret.23)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.peek 1
@Screen.Memory.peek$ret.31
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Screen.Memory.peek$ret.31)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.mod 2
@Screen.Math.mod$ret.35
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.mod
0;JMP
(Screen.Math.mod$ret.35)
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$1
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$1
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.powerOfTwo 1
@Screen.Math.powerOfTwo$ret.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.powerOfTwo
0;JMP
(Screen.Math.powerOfTwo$ret.42)
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$1
@Screen.ifEnd$1
0;JMP
// label Screen.ifFalse$1
(Screen.ifFalse$1)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.powerOfTwo 1
@Screen.Math.powerOfTwo$ret.49
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.powerOfTwo
0;JMP
(Screen.Math.powerOfTwo$ret.49)
// not
@SP
A=M-1
M=!M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$1
(Screen.ifEnd$1)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.poke 2
@Screen.Memory.poke$ret.56
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.poke
0;JMP
(Screen.Memory.poke$ret.56)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.updateScreen 1
(Screen.updateScreen)
@SP
M=M+1
A=M-1
M=0
// push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop argument 0
@0
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.peek 1
@Screen.Memory.peek$ret.66
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.peek
0;JMP
(Screen.Memory.peek$ret.66)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// pop argument 1
@1
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// pop argument 2
@2
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D|M
// pop argument 1
@1
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.poke 2
@Screen.Memory.poke$ret.85
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.poke
0;JMP
(Screen.Memory.poke$ret.85)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawLine 0
(Screen.drawLine)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE92
D;JEQ
D=0
@Screen.JUMPWRITE92
0;JMP
(Screen.JUMPTRUE92)
D=-1
(Screen.JUMPWRITE92)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$2
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$2
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawStraightLine 4
@Screen.Screen.drawStraightLine$ret.99
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawStraightLine
0;JMP
(Screen.Screen.drawStraightLine$ret.99)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$2
@Screen.ifEnd$2
0;JMP
// label Screen.ifFalse$2
(Screen.ifFalse$2)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawDiagonalLine 4
@Screen.Screen.drawDiagonalLine$ret.107
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawDiagonalLine
0;JMP
(Screen.Screen.drawDiagonalLine$ret.107)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$2
(Screen.ifEnd$2)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawStraightLine 5
(Screen.drawStraightLine)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE115
D;JGT
D=0
@Screen.JUMPWRITE115
0;JMP
(Screen.JUMPTRUE115)
D=-1
(Screen.JUMPWRITE115)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$3
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$3
D;JNE
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 2
@2
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop argument 0
@0
D=A
@ARG
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$3
@Screen.ifEnd$3
0;JMP
// label Screen.ifFalse$3
(Screen.ifFalse$3)
// label Screen.ifEnd$3
(Screen.ifEnd$3)
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.mod 2
@Screen.Math.mod$ret.130
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.mod
0;JMP
(Screen.Math.mod$ret.130)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Screen.Math.divide$ret.135
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$ret.135)
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.137
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.137)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.while$4
(Screen.while$4)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE146
D;JLT
D=0
@Screen.JUMPWRITE146
0;JMP
(Screen.JUMPTRUE146)
D=-1
(Screen.JUMPWRITE146)
@SP
A=M
M=D
@SP
M=M+1
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE151
D;JLT
D=0
@Screen.JUMPWRITE151
0;JMP
(Screen.JUMPTRUE151)
D=-1
(Screen.JUMPWRITE151)
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$4
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$4
D;JNE
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@Screen.Screen.drawPixel$ret.157
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.Screen.drawPixel$ret.157)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.while$4
@Screen.while$4
0;JMP
// label Screen.whileEnd$4
(Screen.whileEnd$4)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE171
D;JGT
D=0
@Screen.JUMPWRITE171
0;JMP
(Screen.JUMPTRUE171)
D=-1
(Screen.JUMPWRITE171)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$5
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$5
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// goto Screen.ifEnd$5
@Screen.ifEnd$5
0;JMP
// label Screen.ifFalse$5
(Screen.ifFalse$5)
// label Screen.ifEnd$5
(Screen.ifEnd$5)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.while$6
(Screen.while$6)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE186
D;JLT
D=0
@Screen.JUMPWRITE186
0;JMP
(Screen.JUMPTRUE186)
D=-1
(Screen.JUMPWRITE186)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$6
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$6
D;JNE
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawPixel 2
@Screen.Screen.drawPixel$ret.191
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.Screen.drawPixel$ret.191)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.while$6
@Screen.while$6
0;JMP
// label Screen.whileEnd$6
(Screen.whileEnd$6)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.201
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.201)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Screen.Math.divide$ret.204
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$ret.204)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.213
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.213)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@Screen.Math.divide$ret.216
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Screen.Math.divide$ret.216)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 1
@Screen.1
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push static 0
@Screen.0
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$7
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$7
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$7
@Screen.ifEnd$7
0;JMP
// label Screen.ifFalse$7
(Screen.ifFalse$7)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$7
(Screen.ifEnd$7)
// label Screen.while$8
(Screen.while$8)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE237
D;JLT
D=0
@Screen.JUMPWRITE237
0;JMP
(Screen.JUMPTRUE237)
D=-1
(Screen.JUMPWRITE237)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$8
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$8
D;JNE
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Memory.poke 2
@Screen.Memory.poke$ret.242
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.poke
0;JMP
(Screen.Memory.poke$ret.242)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.while$8
@Screen.while$8
0;JMP
// label Screen.whileEnd$8
(Screen.whileEnd$8)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawDiagonalLine 7
(Screen.drawDiagonalLine)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE261
D;JGT
D=0
@Screen.JUMPWRITE261
0;JMP
(Screen.JUMPTRUE261)
D=-1
(Screen.JUMPWRITE261)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$9
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$9
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$9
@Screen.ifEnd$9
0;JMP
// label Screen.ifFalse$9
(Screen.ifFalse$9)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$9
(Screen.ifEnd$9)
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE274
D;JGT
D=0
@Screen.JUMPWRITE274
0;JMP
(Screen.JUMPTRUE274)
D=-1
(Screen.JUMPWRITE274)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$10
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$10
D;JNE
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$10
@Screen.ifEnd$10
0;JMP
// label Screen.ifFalse$10
(Screen.ifFalse$10)
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$10
(Screen.ifEnd$10)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// call Math.abs 1
@Screen.Math.abs$ret.288
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$ret.288)
// pop local 5
@5
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// call Math.abs 1
@Screen.Math.abs$ret.293
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$ret.293)
// pop local 6
@6
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.while$11
(Screen.while$11)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Screen.Math.abs$ret.297
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$ret.297)
// push local 5
@5
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE301
D;JLT
D=0
@Screen.JUMPWRITE301
0;JMP
(Screen.JUMPTRUE301)
D=-1
(Screen.JUMPWRITE301)
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@Screen.Math.abs$ret.303
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Screen.Math.abs$ret.303)
// push local 6
@6
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE307
D;JLT
D=0
@Screen.JUMPWRITE307
0;JMP
(Screen.JUMPTRUE307)
D=-1
(Screen.JUMPWRITE307)
@SP
A=M
M=D
@SP
M=M+1
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D&M
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$11
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$11
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawPixel 2
@Screen.Screen.drawPixel$ret.317
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawPixel
0;JMP
(Screen.Screen.drawPixel$ret.317)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE321
D;JLT
D=0
@Screen.JUMPWRITE321
0;JMP
(Screen.JUMPTRUE321)
D=-1
(Screen.JUMPWRITE321)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.ifFalse$12
@SP
M=M-1
A=M
D=M
@Screen.ifFalse$12
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 6
@6
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.ifEnd$12
@Screen.ifEnd$12
0;JMP
// label Screen.ifFalse$12
(Screen.ifFalse$12)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 4
@4
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 5
@5
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 4
@4
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.ifEnd$12
(Screen.ifEnd$12)
// goto Screen.while$11
@Screen.while$11
0;JMP
// label Screen.whileEnd$11
(Screen.whileEnd$11)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawRectangle 1
(Screen.drawRectangle)
@SP
M=M+1
A=M-1
M=0
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.while$13
(Screen.while$13)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 3
@3
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE355
D;JLT
D=0
@Screen.JUMPWRITE355
0;JMP
(Screen.JUMPTRUE355)
D=-1
(Screen.JUMPWRITE355)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$13
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$13
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Screen.drawLine 4
@Screen.Screen.drawLine$ret.362
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawLine
0;JMP
(Screen.Screen.drawLine$ret.362)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.while$13
@Screen.while$13
0;JMP
// label Screen.whileEnd$13
(Screen.whileEnd$13)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Screen.drawCircle 3
(Screen.drawCircle)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Screen.while$14
(Screen.while$14)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Screen.JUMPTRUE381
D;JLT
D=0
@Screen.JUMPWRITE381
0;JMP
(Screen.JUMPTRUE381)
D=-1
(Screen.JUMPWRITE381)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Screen.whileEnd$14
@SP
M=M-1
A=M
D=M
@Screen.whileEnd$14
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.387
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.387)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.390
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.390)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// call Math.sqrt 1
@Screen.Math.sqrt$ret.392
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.sqrt
0;JMP
(Screen.Math.sqrt$ret.392)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.398
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.398)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@Screen.Math.multiply$ret.401
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Screen.Math.multiply$ret.401)
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// call Math.sqrt 1
@Screen.Math.sqrt$ret.403
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.sqrt
0;JMP
(Screen.Math.sqrt$ret.403)
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call Screen.drawLine 4
@Screen.Screen.drawLine$ret.414
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawLine
0;JMP
(Screen.Screen.drawLine$ret.414)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Screen.while$14
@Screen.while$14
0;JMP
// label Screen.whileEnd$14
(Screen.whileEnd$14)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.init 0
(String.init)
// push constant 128
@128
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 0
@String.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 129
@129
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 1
@String.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 34
@34
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 2
@String.2
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 45
@45
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 3
@String.3
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 48
@48
D=A
@SP
M=M+1
A=M-1
M=D
// pop static 4
@String.4
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.new 0
(String.new)
// push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// call Memory.alloc 1
@String.Memory.alloc$ret.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(String.Memory.alloc$ret.16)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE22
D;JGT
D=0
@String.JUMPWRITE22
0;JMP
(String.JUMPTRUE22)
D=-1
(String.JUMPWRITE22)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$1
@SP
M=M-1
A=M
D=M
@String.ifFalse$1
D;JNE
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.new 1
@String.Array.new$ret.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.new
0;JMP
(String.Array.new$ret.26)
// pop this 0
@0
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$1
@String.ifEnd$1
0;JMP
// label String.ifFalse$1
(String.ifFalse$1)
// label String.ifEnd$1
(String.ifEnd$1)
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.dispose 0
(String.dispose)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE38
D;JGT
D=0
@String.JUMPWRITE38
0;JMP
(String.JUMPTRUE38)
D=-1
(String.JUMPWRITE38)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$2
@SP
M=M-1
A=M
D=M
@String.ifFalse$2
D;JNE
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Array.dispose 1
@String.Array.dispose$ret.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Array.dispose
0;JMP
(String.Array.dispose$ret.42)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$2
@String.ifEnd$2
0;JMP
// label String.ifFalse$2
(String.ifFalse$2)
// label String.ifEnd$2
(String.ifEnd$2)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.length 0
(String.length)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.charAt 0
(String.charAt)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push that 0
@0
D=A
@THAT
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.setCharAt 0
(String.setCharAt)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 2
@2
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.appendChar 0
(String.appendChar)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 0
@0
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// push temp 0
@0
D=A
@5
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop that 0
@0
D=A
@THAT
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.eraseLastChar 0
(String.eraseLastChar)
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.intValue 4
(String.intValue)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// call String.charAt 2
@String.String.charAt$ret.111
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(String.String.charAt$ret.111)
// push static 3
@String.3
D=M
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE113
D;JEQ
D=0
@String.JUMPWRITE113
0;JMP
(String.JUMPTRUE113)
D=-1
(String.JUMPWRITE113)
@SP
A=M
M=D
@SP
M=M+1
// pop local 3
@3
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$3
@SP
M=M-1
A=M
D=M
@String.ifFalse$3
D;JNE
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$3
@String.ifEnd$3
0;JMP
// label String.ifFalse$3
(String.ifFalse$3)
// label String.ifEnd$3
(String.ifEnd$3)
// label String.while$4
(String.while$4)
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push this 1
@1
D=A
@THIS
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE128
D;JLT
D=0
@String.JUMPWRITE128
0;JMP
(String.JUMPTRUE128)
D=-1
(String.JUMPWRITE128)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto String.whileEnd$4
@SP
M=M-1
A=M
D=M
@String.whileEnd$4
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.multiply 2
@String.Math.multiply$ret.133
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(String.Math.multiply$ret.133)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call String.charAt 2
@String.String.charAt$ret.137
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.charAt
0;JMP
(String.String.charAt$ret.137)
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@String.4
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.while$4
@String.while$4
0;JMP
// label String.whileEnd$4
(String.whileEnd$4)
// push local 3
@3
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$5
@SP
M=M-1
A=M
D=M
@String.ifFalse$5
D;JNE
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// neg
@SP
A=M-1
M=M-1
M=!M
// call Math.multiply 2
@String.Math.multiply$ret.157
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(String.Math.multiply$ret.157)
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$5
@String.ifEnd$5
0;JMP
// label String.ifFalse$5
(String.ifFalse$5)
// label String.ifEnd$5
(String.ifEnd$5)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.setInt 1
(String.setInt)
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop this 1
@1
D=A
@THIS
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE171
D;JLT
D=0
@String.JUMPWRITE171
0;JMP
(String.JUMPTRUE171)
D=-1
(String.JUMPWRITE171)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$6
@SP
M=M-1
A=M
D=M
@String.ifFalse$6
D;JNE
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push static 3
@String.3
D=M
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@String.String.appendChar$ret.176
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.String.appendChar$ret.176)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$6
@String.ifEnd$6
0;JMP
// label String.ifFalse$6
(String.ifFalse$6)
// label String.ifEnd$6
(String.ifEnd$6)
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Math.abs 1
@String.Math.abs$ret.183
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(String.Math.abs$ret.183)
// call String.setIntRec 2
@String.String.setIntRec$ret.184
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setIntRec
0;JMP
(String.String.setIntRec$ret.184)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.setIntRec 1
(String.setIntRec)
@SP
M=M+1
A=M-1
M=0
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.mod 2
@String.Math.mod$ret.193
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.mod
0;JMP
(String.Math.mod$ret.193)
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@String.JUMPTRUE197
D;JLT
D=0
@String.JUMPWRITE197
0;JMP
(String.JUMPTRUE197)
D=-1
(String.JUMPWRITE197)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto String.ifFalse$7
@SP
M=M-1
A=M
D=M
@String.ifFalse$7
D;JNE
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@String.4
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call String.appendChar 2
@String.String.appendChar$ret.204
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.String.appendChar$ret.204)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto String.ifEnd$7
@String.ifEnd$7
0;JMP
// label String.ifFalse$7
(String.ifFalse$7)
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 10
@10
D=A
@SP
M=M+1
A=M-1
M=D
// call Math.divide 2
@String.Math.divide$ret.211
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(String.Math.divide$ret.211)
// call String.setIntRec 2
@String.String.setIntRec$ret.212
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.setIntRec
0;JMP
(String.String.setIntRec$ret.212)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push static 4
@String.4
D=M
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// call String.appendChar 2
@String.String.appendChar$ret.218
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(String.String.appendChar$ret.218)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label String.ifEnd$7
(String.ifEnd$7)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.newLine 0
(String.newLine)
// push static 0
@String.0
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.backSpace 0
(String.backSpace)
// push static 1
@String.1
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function String.doubleQuote 0
(String.doubleQuote)
// push static 2
@String.2
D=M
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// call Memory.init 0
@Sys.Memory.init$ret.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.init
0;JMP
(Sys.Memory.init$ret.2)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Math.init 0
@Sys.Math.init$ret.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.init
0;JMP
(Sys.Math.init$ret.4)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Screen.init 0
@Sys.Screen.init$ret.6
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.init
0;JMP
(Sys.Screen.init$ret.6)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Output.init 0
@Sys.Output.init$ret.8
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.init
0;JMP
(Sys.Output.init$ret.8)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Keyboard.init 0
@Sys.Keyboard.init$ret.10
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.init
0;JMP
(Sys.Keyboard.init$ret.10)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call String.init 0
@Sys.String.init$ret.12
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.init
0;JMP
(Sys.String.init$ret.12)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Main.main 0
@Sys.Main.main$ret.14
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.main
0;JMP
(Sys.Main.main$ret.14)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Sys.halt 0
@Sys.Sys.halt$ret.16
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.Sys.halt$ret.16)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Sys.halt 0
(Sys.halt)
// call Output.println 0
@Sys.Output.println$ret.21
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Sys.Output.println$ret.21)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@Sys.String.new$ret.24
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Sys.String.new$ret.24)
// push constant 80
@80
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.26
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.26)
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.28
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.28)
// push constant 111
@111
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.30
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.30)
// push constant 103
@103
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.32
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.32)
// push constant 114
@114
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.34
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.34)
// push constant 97
@97
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.36
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.36)
// push constant 109
@109
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.38
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.38)
// push constant 32
@32
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.40
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.40)
// push constant 102
@102
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.42)
// push constant 105
@105
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.44
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.44)
// push constant 110
@110
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.46
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.46)
// push constant 105
@105
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.48
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.48)
// push constant 115
@115
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.50
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.50)
// push constant 104
@104
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.52
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.52)
// push constant 101
@101
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.54
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.54)
// push constant 100
@100
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.56
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.56)
// push constant 46
@46
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.58
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.58)
// call Output.printString 1
@Sys.Output.printString$ret.59
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Sys.Output.printString$ret.59)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Output.println 0
@Sys.Output.println$ret.61
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Sys.Output.println$ret.61)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Sys.while$1
(Sys.while$1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// not
@SP
A=M-1
M=!M
// not
@SP
A=M-1
M=!M
// if-goto Sys.whileEnd$1
@SP
M=M-1
A=M
D=M
@Sys.whileEnd$1
D;JNE
// goto Sys.while$1
@Sys.while$1
0;JMP
// label Sys.whileEnd$1
(Sys.whileEnd$1)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Sys.wait 3
(Sys.wait)
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
@SP
M=M+1
A=M-1
M=0
// push constant 300
@300
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 0
@0
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Sys.while$2
(Sys.while$2)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Sys.JUMPTRUE80
D;JLT
D=0
@Sys.JUMPWRITE80
0;JMP
(Sys.JUMPTRUE80)
D=-1
(Sys.JUMPWRITE80)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Sys.whileEnd$2
@SP
M=M-1
A=M
D=M
@Sys.whileEnd$2
D;JNE
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// label Sys.while$3
(Sys.while$3)
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push local 0
@0
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@Sys.JUMPTRUE88
D;JLT
D=0
@Sys.JUMPWRITE88
0;JMP
(Sys.JUMPTRUE88)
D=-1
(Sys.JUMPWRITE88)
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
A=M-1
M=!M
// if-goto Sys.whileEnd$3
@SP
M=M-1
A=M
D=M
@Sys.whileEnd$3
D;JNE
// push local 2
@2
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 2
@2
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Sys.while$3
@Sys.while$3
0;JMP
// label Sys.whileEnd$3
(Sys.whileEnd$3)
// push local 1
@1
D=A
@LCL
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 1
@1
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=D+M
// pop local 1
@1
D=A
@LCL
A=M
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// goto Sys.while$2
@Sys.while$2
0;JMP
// label Sys.whileEnd$2
(Sys.whileEnd$2)
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Sys.error 0
(Sys.error)
// push constant 3
@3
D=A
@SP
M=M+1
A=M-1
M=D
// call String.new 1
@Sys.String.new$ret.107
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(Sys.String.new$ret.107)
// push constant 69
@69
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.109
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.109)
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.111
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.111)
// push constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
// call String.appendChar 2
@Sys.String.appendChar$ret.113
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(Sys.String.appendChar$ret.113)
// call Output.printString 1
@Sys.Output.printString$ret.114
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(Sys.Output.printString$ret.114)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
// call Output.printInt 1
@Sys.Output.printInt$ret.117
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(Sys.Output.printInt$ret.117)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Output.println 0
@Sys.Output.println$ret.119
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.println
0;JMP
(Sys.Output.println$ret.119)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Sys.halt 0
@Sys.Sys.halt$ret.121
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.halt
0;JMP
(Sys.Sys.halt$ret.121)
// pop temp 0
@0
D=A
@5
A=D+A
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
